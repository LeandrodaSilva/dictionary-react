{"version":3,"sources":["assets/images/search-black-18dp.svg","assets/images/book-24px.svg","store/wordSlice.js","store/searchSlice.js","components/SearchIcon/index.js","components/Input/index.js","components/Search/index.js","services/dictionary.js","components/Button/index.js","components/Lexeme/index.js","components/LexemeList/index.js","components/Audio/index.js","components/Pronuntiation/index.js","components/PronunciationList/index.js","components/Card/index.js","components/CardList/index.js","pages/SearchPage/index.js","routes/index.js","components/Header/index.js","components/Footer/index.js","app/index.js","serviceWorker.js","store/index.js","index.js"],"names":["module","exports","wordSlice","createSlice","name","initialState","entries","reducers","setEntries","state","action","payload","entries_map","word","wordActions","actions","searchSlice","text","setText","text_map","search","searchActions","searchIconStyle","backgroundImage","searchIcon","backgroundColor","backgroundRepeat","backgroundSize","backgroundAttachment","Input","useSelector","dispatch","useDispatch","htmlFor","hidden","id","className","type","title","required","value","style","onChange","evt","target","autoFocus","Search","dictionary","axios","create","baseURL","Button","a","preventDefault","get","resp","data","onClick","Lexeme","lexeme","senses","map","sense","index","key","definition","LexemesList","lexemes","Audio","audio","url","controls","src","Pronunciation","pronunciation","PronunciationList","pronunciations","Card","entrie","CardList","SearchPage","autoComplete","length","Routes","path","exact","component","Header","logo","alt","Footer","href","App","Boolean","window","location","hostname","match","configureStore","reducer","wordReducer","searchReducer","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d0bdcabe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search-black-18dp.19142cc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/book-24px.9a22c7f5.svg\";","import { createSlice } from '@reduxjs/toolkit';\n\nexport const wordSlice = createSlice({\n  name: 'word',\n  initialState: {entries: []},\n  reducers: {\n    setEntries: (state, action) => {\n      state.entries = action.payload.entries;\n      return state;\n    }\n  }\n})\n\nexport const entries_map = (state) => state.word.entries;\nexport const wordActions = wordSlice.actions;\nexport default wordSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nexport const searchSlice = createSlice({\n  name: 'search',\n  initialState: {text: \"example\"},\n  reducers: {\n    setText: (state, action) => {\n      state.text = action.payload;\n      return state;\n    }\n  }\n})\n\nexport const text_map = (state) => state.search.text;\nexport const searchActions = searchSlice.actions;\nexport default searchSlice.reducer;\n","import searchIcon from \"../../assets/images/search-black-18dp.svg\";\n\nconst style = {\n  backgroundImage: `url(${searchIcon})`,\n  backgroundColor: 'white',\n  backgroundRepeat: 'no-repeat',\n  backgroundSize: '20px 30px',\n  backgroundAttachment: 'scroll',\n}\n\nexport const searchIconStyle = style;\n","import React from \"react\";\nimport {searchActions, text_map} from \"../../store/searchSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport \"./styles.css\";\nimport {searchIconStyle} from \"../SearchIcon\";\n\nexport default function Input() {\n  const text = useSelector(text_map);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <label htmlFor=\"input-search\" hidden>Pesquisa:</label>\n      <input id=\"input-search\"\n             className=\"hover-effect\"\n             type=\"text\"\n             title=\"Search field\"\n             required\n             value={text}\n             style={searchIconStyle}\n             onChange={evt => dispatch(searchActions.setText(evt.target.value))}\n             autoFocus />\n    </>\n  )\n}\n","import React from \"react\";\nimport Input from \"../Input\";\nimport \"./styles.css\";\n\nexport default function Search() {\n  return (\n    <div className=\"container-search\">\n      <Input />\n    </div>\n  )\n}\n","import axios from 'axios';\n\nconst dictionary = axios.create({\n  baseURL: \"https://dictionary-express.herokuapp.com/\"\n});\n\nexport default dictionary;\n","import React from \"react\";\nimport dictionary from \"../../services/dictionary\";\nimport {wordActions} from \"../../store/wordSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {text_map} from \"../../store/searchSlice\";\nimport \"./styles.css\";\n\nexport default function Button() {\n  const text = useSelector(text_map);\n  const dispatch = useDispatch();\n\n  async function search(evt) {\n    evt.preventDefault();\n    const resp = await dictionary.get(`search?word=${text}`);\n\n    dispatch(wordActions.setEntries(resp.data));\n  }\n\n  return (\n    <div className=\"container-button\">\n      <button className=\"hover-effect\"\n              type=\"submit\"\n              onClick={(evt) => search(evt)}>Search</button>\n    </div>\n  )\n}\n","import React from \"react\";\n\nexport default function Lexeme({lexeme}) {\n  return (\n    <>\n      {\n        lexeme.senses ? lexeme.senses.map((sense, index) => <p key={index}>{sense.definition}</p>) : null\n      }\n    </>\n  )\n}\n","import React from \"react\";\nimport Lexeme from \"../Lexeme\";\n\nexport default function LexemesList({lexemes}) {\n  return (\n    <div className=\"container-lexemes\">\n      <h4>Definitions:</h4>\n      {\n        lexemes && lexemes.map((lexeme, index) => <Lexeme key={index} lexeme={lexeme} />)\n      }\n    </div>\n  )\n}\n","import React from \"react\";\n\nexport default function Audio({audio}) {\n  return (\n    <div>\n      {\n        audio.url\n          ?\n          <audio controls=\"controls\">\n              <source src={audio.url} type=\"audio/mp3\" />seu navegador n√£o suporta HTML5\n          </audio>\n          :\n          null\n      }\n    </div>\n  )\n}\n","import React from \"react\";\nimport Audio from \"../Audio\";\n\nexport default function Pronunciation({pronunciation}) {\n  return (\n    <>\n      {\n        pronunciation.audio ? <Audio audio={pronunciation.audio}/> : null\n      }\n    </>\n  )\n}\n","import React from \"react\";\nimport Pronunciation from \"../Pronuntiation\";\n\nexport default function PronunciationList({pronunciations}) {\n  return (\n    <div className=\"container-pronuntiations\">\n      <h4>Pronuntiations:</h4>\n      {\n        pronunciations &&\n        pronunciations.map((pronunciation, index) => <Pronunciation key={index} pronunciation={pronunciation} />)\n      }\n    </div>\n  )\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport LexemesList from \"../LexemeList\";\nimport PronunciationList from \"../PronunciationList\";\n\nexport default function Card({entrie}) {\n  return (\n    <div className=\"container container-card hover-effect\">\n      <LexemesList lexemes={entrie.lexemes}/>\n      <PronunciationList pronunciations={entrie.pronunciations} />\n    </div>\n  )\n}\n","import React from \"react\";\nimport \"./styles.css\";\nimport {useSelector} from \"react-redux\";\nimport {entries_map} from \"../../store/wordSlice\";\nimport Card from \"../Card\";\n\nexport default function CardList() {\n  const entries = useSelector(entries_map);\n\n  return (\n    <div className=\"container-cards\">\n      {\n        entries.map((entrie, index) => <Card key={index} entrie={entrie} />)\n      }\n    </div>\n  )\n}\n","import React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {entries_map} from \"../../store/wordSlice\";\nimport Search from \"../../components/Search\";\nimport Button from \"../../components/Button\";\nimport CardList from \"../../components/CardList\";\nimport \"./styles.css\";\n\nexport default function SearchPage() {\n  const entries = useSelector(entries_map);\n\n  return (\n    <main>\n      <form autoComplete=\"off\">\n        <Search />\n        <Button />\n\n        {entries.length ? <CardList /> : null}\n      </form>\n    </main>\n  )\n}\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport SearchPage from \"../pages/SearchPage\";\n\n\nexport default function Routes() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/\" exact component={SearchPage} />\n      </Switch>\n    </BrowserRouter>\n  )\n}\n","import React from \"react\";\nimport logo from \"../../assets/images/book-24px.svg\";\nimport \"./styles.css\";\n\nexport default function Header() {\n  return (\n    <header className=\"container-header\">\n      <img src={logo} alt=\"Open book\" />\n      <h1 title=\"Dictionary\">Dictionary</h1>\n    </header>\n  )\n}\n","import React from \"react\";\nimport \"./styles.css\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"container-footer\">\n      <p>API: <a href=\"https://www.linguarobot.io/\">Lingua Robot</a></p>\n    </footer>\n  )\n}\n","import React from 'react';\nimport Routes from \"../routes\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport './styles.css';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Routes />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport wordReducer from './wordSlice';\nimport searchReducer from './searchSlice';\n\nexport default configureStore({\n  reducer: {\n    'word': wordReducer,\n    'search': searchReducer,\n  }\n})\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}